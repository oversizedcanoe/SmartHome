@using SmartHome.Connection.Interfaces;
@using System.Drawing;
@using SmartHome.Connection.Models;
@using SmartHome.Connection.Services;
@inject DelayService _delayService;

<h5>Brightness</h5>
<div style="text-align: center">
    <button type="button" class="btn btn-primary btn-sm" @onclick="() => ChangeBrightness(-25)">
        <span class="oi oi-minus" aria-hidden="true"></span>
        <span class="oi oi-minus" aria-hidden="true"></span>
    </button>
    <button type="button" class="btn btn-primary btn-sm" @onclick="() => ChangeBrightness(-5)">
        <span class="oi oi-minus" aria-hidden="true"></span>
    </button>
    <span>@(_brightness)%</span>
    <button type="button" class="btn btn-primary btn-sm" @onclick="() => ChangeBrightness(5)">
        <span class="oi oi-plus" aria-hidden="true"></span>
    </button>
    <button type="button" class="btn btn-primary btn-sm" @onclick="() => ChangeBrightness(25)">
        <span class="oi oi-plus" aria-hidden="true"></span>
        <span class="oi oi-plus" aria-hidden="true"></span>
    </button>
</div>

<hr />
<h5>Color (@SmartBulb.GetHue())</h5>
<div style="height: 2rem; width:100%; background-color:hsl(@Hue, 100%, 50%)"></div>
<input type="range" @bind="@Hue" class="form-range" min="0" max="360" @bind:event="oninput">
<hr />

@code {
    [Parameter]
    public ISmartBulb SmartBulb { get; set; }

    private bool _poweredOn => SmartBulb.On;


    protected override void OnInitialized()
    {
        base.OnInitialized();
        _hue = SmartBulb.GetHue();
        _brightness = SmartBulb.Brightness;
    }

    void ChangeHue(ChangeEventArgs e)
    {

    }

    private int _hue;

    private int Hue
    {
        get
        {
            return _hue;
        }
        set
        {
            this.SmartBulb.SetHue(value);
            _delayService.WaitForDeviceToUpdate();
            _hue = value;
        }
    }

    private void OnColorChange()
    {
        SmartBulb.SetHue(_hue);
    }

    private int _brightness { get; set; }

    private void ChangeBrightness(int amount)
    {
        if (amount > 0)
        {
            if (SmartBulb.Brightness + amount <= 100)
            {
                SmartBulb.Brightness += amount;
            }
            else
            {
                SmartBulb.Brightness = 100;
            }
        }
        else
        {
            if (SmartBulb.Brightness + amount >= 0)
            {
                SmartBulb.Brightness += amount;
            }
            else
            {
                SmartBulb.Brightness = 0;
            }
        }

        _delayService.WaitForDeviceToUpdate();

        _brightness = SmartBulb.Brightness;
    }
}
