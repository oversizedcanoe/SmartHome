@page "/modes"

@using SmartHome.Connection.Interfaces;
@using SmartHome.Connection.Services;
@inject ModeService _modeService
@inject ISmartDeviceService _smartDeviceService;

<PageTitle>Modes</PageTitle>

<h1>Modes</h1>

<p>This component demonstrates fetching data from a service.</p>

<button @onclick="StartLavaLampMode">Start Lava Lamp Mode</button>
<button @onclick="StopLavaLampMode">Stop Lava Lamp Mode</button>


<input type="number" @bind-value="step" />
<input type="number" @bind-value="delay" />

@code {
    private CancellationTokenSource cancellationTokenSource;
    private CancellationToken cancellationToken;

    private int step = 20;
    private int delay = 1000;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    void StartLavaLampMode()
    {
        this.cancellationTokenSource = new CancellationTokenSource();
        this.cancellationToken = this.cancellationTokenSource.Token;

        var bulb1 = (_smartDeviceService.AvailableDevices.Where(ad => ad.Alias.Contains("kitchen light"))).Select(sd => sd as ISmartBulb).ToList();

        this._modeService.RunLavaLampMode(bulb1, this.cancellationToken);
    }

    void StopLavaLampMode()
    {
        this.cancellationTokenSource?.Cancel();
    }
}
